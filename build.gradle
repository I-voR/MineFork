buildscript {
    repositories {
        maven {
            name = "forge"
            url = 'https://maven.minecraftforge.net'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'

// group = 'com.I-voR.Mineport'
// archivesBaseName = 'Mineport'

group = 'mineport'
version = '0.0.1'
archivesBaseName = 'mineport'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                mineport {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                mineport {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

processResources {
    inputs.property "version", project.version
    // inputs.property "mcversion", project.minecraft.version
    inputs.property "mcversion", '1.12.2'

    copy {
        // replace stuff in mcmod.info, nothing else
        from(sourceSets.main.resources.srcDirs[0])
        into(sourceSets.main.resources.srcDirs[1])
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':'1.12.2'

    }

    copy {
        // copy everything else, thats not the mcmod.info
        from(sourceSets.main.resources.srcDirs[0])
        into(sourceSets.main.resources.srcDirs[1])
        exclude 'mcmod.info'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title"     : "mineport",
                "Specification-Vendor"    : "I-voR",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "I-voR",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')

// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
// publish.dependsOn('reobfJar')

/*
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
 */
